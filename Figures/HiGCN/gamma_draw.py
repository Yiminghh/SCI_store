import matplotlib.pyplot as plt
import numpy as np
from matplotlib.pyplot import MultipleLocator
import matplotlib.ticker as mtick


font2 = {'family': 'Arial',
         'weight': 'normal',
         'size': 30,
         }
# cora
'''
11
88.8489326765189
89.17712177121771
96.03082851637768
1.2674763995361333
1.370842500470168
1.1168691133864685
12
88.82101806239736
89.3321033210332
96.18432883750805
1.2637663039355505
1.3743542311580998
1.02520972806219

'''
# avg1,2是HISCN的test,val；avg3,4是chebnet的test,val
avg1 = [86.73563218390804, 88.05254515599346, 88.49753694581277, 88.52380952380952, 88.66995073891626, 88.6978653530378,
        88.47619047619051, 88.66995073891627, 88.97536945812806, 89.33, 88.8489326765189, 88.82101806239736]
avg2 = [87.38745387453874, 88.59040590405901, 88.760147601476, 88.99077490774906, 89.24907749077492, 88.95018450184504,
        89.23062730627304, 89.07564575645758, 89.22693726937267, 89.25461254612546, 89.17712177121771, 89.3321033210332]

avg3 = [72.59277504105088, 84.74055829228243, 82.52873563218392, 81.6305418719212, 81.03940886699503, 80.37766830870278,
        79.96551724137935, 78.04926108374387, 75.6732348111659, 70.47947454844007, 67.13464696223319, 63.720853858784885]

avg4 = [72.78228782287826, 85.05535055350553, 82.97601476014758, 82.03505535055352, 81.3819188191882, 80.37084870848713,
        80.32287822878229, 78.64022140221398, 75.92435424354244, 70.75645756457565, 67.56273062730628, 63.88191881918818]

std1 = [1.5123821276065614, 1.3691312569386023, 1.1773238703326032, 1.2446796295476605, 1.2425342799601053,
        1.2621384392943378, 1.2625741654490952, 1.310771728591788, 1.0976799636388284, 1.1734, 1.2674763995361333, 1.2637663039355505]
std2 = [1.5105552650982355, 1.222377287736995, 1.1726191807135669, 1.3307316281020893, 1.3707518602213717,
        1.4648784224761675, 1.1797663152959528, 1.4582697159300242, 1.5362025145150366, 1.186850334765712, 1.370842500470168, 1.3743542311580998]
std3 = [2.6522919568604624, 2.2442801680804023, 2.7402823100621716, 3.1582339902074366, 2.9315247528221797, 3.191511696787929,
        2.4532365914426486, 3.265949998667275, 5.697906758697386, 8.699276794396932, 10.31706794902452, 12.533454682674765]
std4 = [2.8930312896966566, 2.165834773554123, 3.0383880131389063, 3.3063075536880446, 2.90742302009908, 3.4483483679024105,
        2.546710318409878, 3.3895007643360633, 5.728744852543605, 8.178261506887457, 10.454490449369422, 12.278625371121295]


plt.figure(figsize=(24,8)) #设置画布大小
plt.subplot(131)
plt.plot(list(range(12)), avg1, '#03AD56', label='test', marker='o', markersize=5, alpha=0.9)
# val
plt.plot(list(range(12)), avg2, '#E83937', label='val', marker='^', markersize=7, alpha=0.9)
# train
plt.plot(list(range(12)), avg3, label='test_Cheb', marker='o', markersize=5, alpha=0.9)
# val
plt.plot(list(range(12)), avg4, label='val2_Cheb', marker='^', markersize=7, alpha=0.9)

avg1 = np.array(avg1)
std1 = np.array(std1)
std1 = 0.196 * std1
up1 = avg1 + std1
down1 = avg1 - std1

avg2 = np.array(avg2)
std2 = np.array(std2)
std2 = 0.196 * std2
up2 = avg2 + std2
down2 = avg2 - std2

avg3 = np.array(avg3)
std3 = np.array(std3)
std3 = 0.196 * std3
up3 = avg3 + std3
down3 = avg3 - std3

avg4 = np.array(avg4)
std4 = np.array(std4)
std4 = 0.196 * std4
up4 = avg4 + std4
down4 = avg4 - std4

bwith = 3.5  # 边框宽度设置为2
ax = plt.gca()  # 获取边框
ax.spines['bottom'].set_linewidth(bwith)
ax.spines['left'].set_linewidth(bwith)
ax.spines['top'].set_linewidth(bwith)
ax.spines['right'].set_linewidth(bwith)
# ax.yaxis.set_major_formatter(mtick.FormatStrFormatter('%.2f'))  # 小数点后3位

plt.title('Cora', font2)
plt.xlabel('K', font2)
plt.ylabel('Acc', font2)
plt.tick_params(labelsize=25)
plt.legend()
plt.rcParams.update({'font.size':18})

plt.fill_between(list(range(12)), down1, up1, alpha=0.1, facecolor='#03AD56')
plt.fill_between(list(range(12)), down2, up2, alpha=0.1, facecolor='#E83937')
plt.fill_between(list(range(12)), down3, up3, alpha=0.1, facecolor='#03AD56')
plt.fill_between(list(range(12)), down4, up4, alpha=0.1, facecolor='#E83937')




# citeseer
'''
11
80.83492496589359
81.18646616541355
79.15811301192322
1.4617904735953022
1.3927272067080552
2.2668031423922974
12
80.85402455661664
81.20150375939849
78.84499740798337
1.3601876568942228
1.4749871484256412
2.18748608079976
'''
plt.subplot(132)
avg1 = [78.66302864938609, 80.07503410641203, 80.79126875852663, 80.94679399727147, 80.99045020463849, 80.86630286493859,
        80.96725784447477, 81.02864938608458, 81.04774897680765, 81.12, 80.83492496589359, 80.85402455661664]
avg2 = [78.96541353383456, 80.38195488721806, 80.87368421052635, 80.98045112781953, 81.26315789473685, 81.0541353383459,
        81.30375939849627, 81.33383458646614, 81.02857142857142, 81.08466165413536, 81.18646616541355, 81.20150375939849]

std1 = [1.5015500404783753, 1.3585658943350132, 1.2287399999124367, 1.4553771501150918, 1.2425342799601053,
        1.2653388761294757, 1.4828878047333411, 1.4437282473878377, 1.4601776744871264, 1.4432776158732, 1.4617904735953022, 1.3601876568942228]
std2 = [1.271238030568431, 1.5708953298952082, 1.5933741204380132, 1.350787820033336, 1.440943654723909,
        1.3184282884086576, 1.4889579823290855, 1.3707581463801297, 1.48708347612598, 1.4580069909902595,1.3927272067080552,1.4749871484256412]

plt.plot(list(range(12)), avg1, '#03AD56', label='test', marker='o', markersize=5, alpha=0.9)
# val
plt.plot(list(range(12)), avg2, '#E83937', label='val', marker='^', markersize=7, alpha=0.9)
# train
# plt.plot(list(range(10)), avg3, 'b',  label='train', marker='s', markersize=7, alpha=0.9)
avg1 = np.array(avg1)
std1 = np.array(std1)
std1 = 0.196 * std1
up1 = avg1 + std1
down1 = avg1 - std1

avg2 = np.array(avg2)
std2 = np.array(std2)
std2 = 0.196 * std2
up2 = avg2 + std2
down2 = avg2 - std2
plt.title('Citeseer', font2)
plt.xlabel('K', font2)
plt.ylabel('Acc', font2)
plt.tick_params(labelsize=25)
plt.legend()
plt.rcParams.update({'font.size':18})

plt.fill_between(list(range(12)), down1, up1, alpha=0.1, facecolor='#03AD56')
plt.fill_between(list(range(12)), down2, up2, alpha=0.1, facecolor='#E83937')



#pubmed
'''
11
89.8831432192649
89.99340603601317
85.19342294361321
0.7756562455451994
0.6838584752000743
2.276489971322121
12
89.85196451204057
89.97260968805476
84.80378730239246
0.7347686819177677
0.789719787552586
2.4149783605879396
'''
plt.subplot(133)
avg1 = [87.16197718631179, 88.13485424588089, 88.93586818757925, 89.2778200253485, 89.39898605830166, 89.54651457541195,
        89.58555133079847, 89.75158428390368, 89.67629911280103, 89.89, 89.8831432192649, 89.85196451204057]
avg2 = [87.26604108546792, 88.26274410347449, 88.9936596500127, 89.24524473750951, 89.47958407304084, 89.61095612477808,
        89.53233578493528, 89.77428354045139, 89.76540705046915, 89.87851889424296,89.99340603601317,89.97260968805476]

std1 = [0.9426687731558516, 0.8257143647941331, 0.7497298426508875, 0.7758351579108433, 0.7760488047349936,
        0.7782282850006439, 0.6867572315072311, 0.731484449365443, 0.7457716526791108, 0.7143129312081534, 0.7756562455451994, 0.7347686819177677]
std2 = [0.8615824121879685, 0.8334297810431199, 0.6691179428993347, 0.8256981677926233, 0.703644077547012,
        0.7799982562812048, 0.7658523000891024, 0.7319126026162551, 0.7687590039043836, 0.6994055676152896,0.6838584752000743, 0.789719787552586]

plt.plot(list(range(12)), avg1, '#03AD56', label='test', marker='o', markersize=5, alpha=0.9)
# val
plt.plot(list(range(12)), avg2, '#E83937', label='val', marker='^', markersize=7, alpha=0.9)
# train
# plt.plot(list(range(10)), avg3, 'b',  label='train', marker='s', markersize=7, alpha=0.9)
avg1 = np.array(avg1)
std1 = np.array(std1)
std1 = 0.196 * std1
up1 = avg1 + std1
down1 = avg1 - std1

avg2 = np.array(avg2)
std2 = np.array(std2)
std2 = 0.196 * std2
up2 = avg2 + std2
down2 = avg2 - std2
plt.title('Pubmed', font2)
plt.xlabel('K', font2)
plt.ylabel('Acc', font2)
plt.tick_params(labelsize=25)
plt.legend()
plt.rcParams.update({'font.size':18})

plt.fill_between(list(range(12)), down1, up1, alpha=0.1, facecolor='#03AD56')
plt.fill_between(list(range(12)), down2, up2, alpha=0.1, facecolor='#E83937')




# test
# plt.plot(list(range(10)), avg1, '#03AD56', label='test', marker='o', markersize=5, alpha=0.9)
# # val
# plt.plot(list(range(10)), avg2, '#E83937', label='val', marker='^', markersize=7, alpha=0.9)
# # train
# # plt.plot(list(range(10)), avg3, 'b',  label='train', marker='s', markersize=7, alpha=0.9)
# avg1 = np.array(avg1)
# std1 = np.array(std1)
# std1 = 0.196 * std1
# up1 = avg1 + std1
# down1 = avg1 - std1
#
# avg2 = np.array(avg2)
# std2 = np.array(std2)
# std2 = 0.196 * std2
# up2 = avg2 + std2
# down2 = avg2 - std2


plt.show()
